#!/bin/bash
# vim: syntax=bash

# To trigger a re-run of this script when one of the config files changes, we
# use the template system to include a checksum of the config file. If the config
# file changes, the checksum changes, so this files changes, so it re-runs. Details
# of this technique can be found below in the link:
# https://www.chezmoi.io/user-guide/use-scripts-to-perform-actions/#install-packages-with-scripts
#
# tmux config hash {{ include "private_dot_config/tmux/tmux.conf.tmpl" | sha256sum }} 
# nvim config hash {{ include "private_dot_config/nvim/init.lua.tmpl" | sha256sum }}
# fish config hash {{ include "private_dot_config/fish/config.fish.tmpl" | sha256sum }}


# A helper function that will run a command, capture
# both stout & stderr to a variable. It will then check
# the return code of the command. If there was an error,
# it will print out the output and exit the script.
run() {
    cmd=$1
    output=$(eval $cmd 2>&1)
    if [ $? -ne 0 ]; then
       echo " ERROR"
       printf ">> $1\n"
       printf "$output\n"
       exit -1
    fi
}


# A helper function for installing all packages we want from the
# Ubuntu repositories. Requires only standard apt-get utilities.
install_packages_ubuntu() {
    echo -n "Installing packages using apt-get..."

    # PPA for fish & list of required packages
    FISH_PPA="ppa:fish-shell/release-3"
    PACKAGES="tmux fish ripgrep exa fd-find tree unzip build-essential coreutils bpython xclip"

    run "sudo apt-add-repository -y $FISH_PPA" # Add the fish PPA to give us access to newer version.
    run "sudo apt-get -y install $PACKAGES"    # Install the packages using apt-get

    echo " done"
}


# TODO: comment
install_packages_fedora() {
    echo -n "Installing packages using dnf..."

    PACKAGES="tmux fish ripgrep exa fd-find unzip bpython xclip"
    run "sudo dnf -y install $PACKAGES"

    echo " done"
}


# TODO: comment
install_packages_macos() {
    echo -n "Installing packages using brew..."

    PACKAGES="neovim"
    run "brew install $PACKAGES"

    echo " done"
}


# A helper function for installing neovim on Ubuntu.
# The version of neovim in the official Ubuntu repos
# is old, so we install a newer version directly from
# githum. Requires mktemp, wget, dpkg. Should work on
# any debian based distro.
install_neovim_ubuntu() {
    echo -n "Installing neovim..."

    # Install source & working location
    TEMP_DEB="$(mktemp)"
    NVIM_URL="https://github.com/neovim/neovim/releases/download/v0.8.2/nvim-linux64.deb"

    run "wget -q -O $TEMP_DEB $NVIM_URL" # Download the .deb
    run "sudo dpkg -i $TEMP_DEB"         # Install the .deb
    run "rm -f $TEMP_DEB"                # Cleanup

    echo " done"
}


# TODO: comment
install_neovim_fedora() {

    echo " done"
}


# A helper function for installing the win32yank tool.
# Requires curl & unzip; should work on all WSL distros.
install_win32yank_wsl() {
    echo -n "Installing win32yank..."

    WINUSER=$(cmd.exe /c "echo %USERNAME%" 2>>/dev/null | tr -d '\r')
    WIN32YANK_URL="https://github.com/equalsraf/win32yank/releases/download/v0.0.4/win32yank-x64.zip"
    WIN32YANK_ZIP="/tmp/win32yank.zip"
    WIN32YANK_INSTALL="/mnt/c/Users/$WINUSER/wsl-bin/"
    
    run "mkdir -p $WIN32YANK_INSTALL"
    run "curl -sLo $WIN32YANK_ZIP $WIN32YANK_URL"
    run "sudo unzip -u $WIN32YANK_ZIP win32yank.exe -d $WIN32YANK_INSTALL"
    run "sudo chmod a+x $WIN32YANK_INSTALL/win32yank.exe"
    run "rm -rf $WIN32YANK_ZIP"

    echo " done"
}


install_nerdfonts_fedora() {
    echo -n "Installing NerdFonts..."

    DEJAVU_URL="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/DejaVuSansMono.zip"
    DEJAVU_ZIP="/tmp/DejaVuSansMono.zip"
    FONTS_DIR="$HOME/.local/share/fonts/"

    run "mkdir -p $FONTS_DIR"
    run "curl -sLo $DEJAVU_ZIP $DEJAVU_URL"
    run "unzip -u $DEJAVU_ZIP -d $FONTS_DIR"
    run "rm -rf $DEJAVU_ZIP"
    run "fc-cache -fv"

    echo " done"
}



# fisher plugin manager for fish shell & fish plugins
install_fisher() {
    echo -n "Installing fish plugin manager..."
    
    FISHER_URL="https://git.io/fisher"
    FISHER_SCRIPT="/tmp/fisher"

    run "curl -sLo $FISHER_SCRIPT $FISHER_URL"
    run "fish -c \"source $FISHER_SCRIPT && fisher install jorgebucaran/fisher\""
    run "rm -rf $FISHER_SCRIPT"

    # TODO: install (update) fish plugins

    run "fish -c \"fisher install ilancosman/tide@v5\""
    run "fish -c \"fisher update\""

    echo " done"
}

install_vimplug() {
    echo -n "Installing vimplug..."

    VIMPLUG_URL="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    VIMPLUG_INSTALL="${XDG_DATA_HOME:-$HOME/.local/share}/nvim/site/autoload/plug.vim"

    run "curl -sfLo $VIMPLUG_INSTALL --create-dirs $VIMPLUG_URL"
    run "nvim +PlugInstall +PlugUpdate +qall"
    run "nvim +TSUpdate +qall"

    echo " done"
}



sudo echo "Caching Sudo Credentials"

# Installing Packages from Repos
{{ if eq .osid "linux-ubuntu" }}     install_packages_ubuntu {{ end }}
{{ if eq .osid "linux-ubuntu-wsl" }} install_packages_ubuntu {{ end }}
{{ if eq .osid "linux-fedora" }}     install_packages_fedora {{ end }}
{{ if eq .osid "darwin" }}           install_packages_macos  {{ end }}

# Installing Neovim Nightly Directly
{{ if eq .osid "linux-ubuntu" }}     install_neovim_ubuntu {{ end }}
{{ if eq .osid "linux-ubuntu-wsl" }} install_neovim_ubuntu {{ end }}
{{ if eq .osid "linux-fedora" }}     install_neovim_fedora {{ end }}

# Installing win32yank
{{ if eq .osid "linux-ubuntu-wsl" }} install_win32yank_wsl {{ end }}

# TODO: install fonts
{{ if eq .osid "linux-fedora" }}     install_nerdfonts_fedora {{ end }}
# If WSL, use powershell

# TODO: settings for windows terminal
# TODO: copy alacritty settings to Windows location

# Installing Plugin Managers & Plugins
{{ if eq .osid "linux-ubuntu" }}     install_fisher  {{ end }}
{{ if eq .osid "linux-ubuntu-wsl" }} install_fisher  {{ end }}
{{ if eq .osid "linux-fedora" }}     install_fisher  {{ end }}

{{ if eq .osid "linux-ubuntu" }}     install_vimplug {{ end }}
{{ if eq .osid "linux-ubuntu-wsl" }} install_vimplug {{ end }}
{{ if eq .osid "linux-fedora" }}     install_vimplug {{ end }}
{{ if eq .osid "darwin" }}           install_vimplug {{ end }}


############################
### Change shell to fish ###
############################
# echo -n "Changing shell to fish..."
# run "sudo chsh -s $(which fish) $USER"
# echo " done"


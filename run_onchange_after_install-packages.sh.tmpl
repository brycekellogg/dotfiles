#!/bin/bash
# vim: syntax=bash

# To trigger a re-run of this script when one of the config files changes, we
# use the template system to include a checksum of the config file. If the config
# file changes, the checksum changes, so this files changes, so it re-runs. Details
# of this technique can be found below in the link:
# https://www.chezmoi.io/user-guide/use-scripts-to-perform-actions/#install-packages-with-scripts
#
# tmux config hash {{ include "private_dot_config/tmux/tmux.conf.tmpl" | sha256sum }} 
# fish config hash {{ include "private_dot_config/fish/config.fish.tmpl" | sha256sum }}


# Set bash to exit on the first error. This
# way we will immediately exit if something
# fails while we are installing.
set -e


# A helper function that will run a command, capture
# both stout & stderr to a variable. It will then check
# the return code of the command. If there was an error,
# it will print out the output and exit the script.
run() {
    cmd=$1
    output=$(eval $cmd 2>&1)
    if [ $? -ne 0 ]; then
       echo " ERROR"
       printf ">> $1\n"
       printf "$output\n"
       exit -1
    fi
}


# A helper function for installing all packages we want from the
# Ubuntu repositories. Requires only standard apt-get utilities.
install_packages_ubuntu() {
    echo -n "Installing packages using apt-get..."

    # PPA for fish & list of required packages
    FISH_PPA="ppa:fish-shell/release-3"
    PACKAGES="tmux fish ripgrep exa fd-find tree unzip build-essential coreutils bpython xclip"

    run "sudo apt-add-repository -y $FISH_PPA" # Add the fish PPA to give us access to newer version.
    run "sudo apt-get -y install $PACKAGES"    # Install the packages using apt-get

    echo " done"
}


# TODO: comment
install_packages_fedora() {
    echo -n "Installing packages using dnf..."

    PACKAGES="tmux fish ripgrep exa fd-find unzip bpython xclip"
    run "sudo dnf -y install $PACKAGES"

    echo " done"
}


# TODO: comment
install_packages_macos() {
    echo -n "Installing packages using brew..."

    ## PACKAGES="exa"
    ## run "brew install $PACKAGES"

    echo " done"
}


install_nerdfonts_fedora() {
    echo -n "Installing NerdFonts..."

    DEJAVU_URL="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/DejaVuSansMono.zip"
    DEJAVU_ZIP="/tmp/DejaVuSansMono.zip"
    FONTS_DIR="$HOME/.local/share/fonts/"

    run "mkdir -p $FONTS_DIR"
    run "curl -sLo $DEJAVU_ZIP $DEJAVU_URL"
    run "unzip -u $DEJAVU_ZIP -d $FONTS_DIR"
    run "rm -rf $DEJAVU_ZIP"
    run "fc-cache -fv"

    echo " done"
}

sudo echo "Caching Sudo Credentials"

# Installing Packages from Repos
{{ if eq .osid "linux-ubuntu" }}     install_packages_ubuntu {{ end }}
{{ if eq .osid "linux-ubuntu-wsl" }} install_packages_ubuntu {{ end }}
{{ if eq .osid "linux-fedora" }}     install_packages_fedora {{ end }}
{{ if eq .osid "darwin" }}           install_packages_macos  {{ end }}


# TODO: install fonts
{{ if eq .osid "linux-fedora" }}     install_nerdfonts_fedora {{ end }}
# If WSL, use powershell

# TODO: settings for windows terminal
# TODO: copy alacritty settings to Windows location


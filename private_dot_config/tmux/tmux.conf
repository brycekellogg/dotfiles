

##############################
### Window & Pane Controls ###
##############################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-Left  if-shell "$is_vim" "send-keys M-Left"  "if -F '#{?pane_at_left,0,1}'   'select-pane -L'"
bind-key -n M-Down  if-shell "$is_vim" "send-keys M-Down"  "if -F '#{?pane_at_bottom,0,1}' 'select-pane -D'"
bind-key -n M-Up    if-shell "$is_vim" "send-keys M-Up"    "if -F '#{?pane_at_top,0,1}'    'select-pane -U'"
bind-key -n M-Right if-shell "$is_vim" "send-keys M-Right" "if -F '#{?pane_at_right,0,1}'  'select-pane -R'"

bind-key -T copy-mode-vi M-Left  select-pane -L
bind-key -T copy-mode-vi M-Down  select-pane -D
bind-key -T copy-mode-vi M-Up    select-pane -U
bind-key -T copy-mode-vi M-Right select-pane -R

# Selecting Windows with <ALT-PageUp/Down>
# Additionally, we check if the current window is
# the first or last window to prevent wrap around.
is_first="[[ #{window_start_flag} == 1 ]]"
is_last="[[ #{window_end_flag} == 1 ]]"
bind -n M-PageUp   if-shell "$is_first" "" "select-window -p"
bind -n M-PageDown if-shell "$is_last"  "" "select-window -n"

# Split Windows with <ALT-|/->
bind -n M-| split-window -h -c "#{pane_current_path}"
bind -n M-- split-window -v -c "#{pane_current_path}"
unbind '"'
unbind '%'

# Create New Window with <ALT-c>
bind -n M-c new-window -a

# Zoom windows with <ALT-z>
bind -n M-z resize-pane -Z

# Vim Focus Events Config
#
# Fix issue where vim doesn't get FocusGained or
# FocusLost events. This fixes that for use in gitgutter:
#
# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

#############################
### Visual Customizations ###
#############################

# Change background color of current pane
set -g window-style        'fg=colour014,bg=colour000'
set -g window-active-style 'fg=colour014,bg=colour008'

# set the pane border colors
set -g pane-border-style 'fg=colour002,bg=colour000'
set -g pane-active-border-style 'fg=colour002,bg=colour008'

# Right Status: Clock
set -g status-right "%a %d %b, %I:%M %p"

# Set Terminal
set -g default-terminal "screen-256color"

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow

# Window Names
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format '#T'
set-window-option -g window-status-current-format ' #W* '
set-window-option -g window-status-format ' #W  '
set-option -g status-left ''

########################
### Misc Keybindings ###
########################

# Bind Command Key to <CTRL-a>
unbind C-b
set -g prefix 'C-\'
#bind-key "\\" send-prefix

# Copy and paste vim way
set-window-option -g mode-keys vi
set -g set-clipboard off # stop garbage on copy
bind-key p run "xclip -selection c -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "xclip -selection c"

# Home and End Keys in Copy Mode
bind-key -T copy-mode-vi Home send-keys -X start-of-line
bind-key -T copy-mode-vi End  send-keys -X end-of-line

# don't rename windows automatically
set-option -g allow-rename off

#####################
### Mouse Support ###
#####################
set -g mouse on
unbind -T copy-mode     MouseDragEnd1Pane
unbind -T copy-mode-vi  MouseDragEnd1Pane

##################
### Misc Fixes ###
##################

# Fix annoying ESC problem
set -s escape-time 0


